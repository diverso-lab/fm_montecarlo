<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<feature_model name="FeatureIDE model">
    <feature_tree>
:r FQAs(FQAs)
	:g [1,*]
		: Security(Security)
			:g [1,*]
				: Encryption(Encryption)
					:m EncryptionAlgorithms(EncryptionAlgorithms)
						:g [1,1]
							: Asymmetric(Asymmetric)
								:g [1,1]
									: RSA(RSA)
									: DSA(DSA)
									: ECDSA(ECDSA)
							: Symmetric(Symmetric)
								:g [1,1]
									: AES(AES)
									: DESede(DESede)
									: Blowfish(Blowfish)
									: DES(DES)
					:o KeySize(KeySize)
					:m EncryptionImplementations(EncryptionImplementations)
						:g [1,1]
							: JavaxCrypto(JavaxCrypto)
							: BouncyCastle(BouncyCastle)
					:m EncryptionOperations(EncryptionOperations)
						:g [1,1]
							: Encrypt(Encrypt)
							: Decrypt(Decrypt)
					:m Mode(Mode)
						:g [1,1]
							: CBC(CBC)
							: ECB(ECB)
							: CFB(CFB)
							: CTR(CTR)
							: CTS(CTS)
					:m Padding(Padding)
						:g [1,1]
							: PKCS5(PKCS5)
							: PKCS1(PKCS1)
							: OAEP(OAEP)
				: Authentication(Authentication)
					:m AuthenticationImplementations(AuthenticationImplementations)
						:g [1,1]
							: JAAS(JAAS)
							: SpringSecurity(SpringSecurity)
					:m AuthenticationOperations(AuthenticationOperations)
						:m Authenticate(Authenticate)
					:m AuthenticationMechanism(AuthenticationMechanism)
						:g [1,1]
							: UserPassword(UserPassword)
							: DigitalCertificate(DigitalCertificate)
								:o PseudonymousCertificate(PseudonymousCertificate)
							: Biometric(Biometric)
							: SocialID(SocialID)
							: Pin(Pin)
							: MatrixCode(MatrixCode)
					:o PasswordLength(PasswordLength)
					:o PasswordType(PasswordType)
						:g [1,1]
							: Numeric(Numeric)
							: Alphanumeric(Alphanumeric)
							: SpecialChars(SpecialChars)
					:o LimitedSession(LimitedSession)
					:o AuthenticationLogging(AuthenticationLogging)
					:o AnonymousUser(AnonymousUser)
				: Hashing(Hashing)
					:m HashingImplementations(HashingImplementations)
						:g [1,1]
							: JavaSecurityMessageDigest(JavaSecurityMessageDigest)
							: Guava(Guava)
					:m HashingOperations(HashingOperations)
						:m Hash(Hash)
					:m HashingAlgorithms(HashingAlgorithms)
						:g [1,1]
							: MD5(MD5)
							: SHA1(SHA1)
							: SHA256(SHA256)
							: SHA512(SHA512)
				: Confidentiality(Confidentiality)
				: Privacy(Privacy)
				: Integrity(Integrity)
				: Non_Repudiation(Non_Repudiation)
		: Usability(Usability)
			:g [1,*]
				: Logging(Logging)
					:m LoggingOperations(LoggingOperations)
						:m Log(Log)
					:m LoggingImplementations(LoggingImplementations)
						:g [1,1]
							: Log4J(Log4J)
							: LogBack(LogBack)
							: JavaUtilLogging(JavaUtilLogging)
							: SimpleImplementationSLF4J(SimpleImplementationSLF4J)
					:m Handler(Handler)
						:g [1,1]
							: ConsoleLog(ConsoleLog)
							: FileLog(FileLog)
							: DatabaseLog(DatabaseLog)
					:m Format(Format)
						:g [1,1]
							: TXT(TXT)
							: XML(XML)
							: HTML(HTML)
							: JSON(JSON)
					:m Level(Level)
						:g [1,*]
							: Trace(Trace)
							: Debug(Debug)
							: Info(Info)
							: Warning(Warning)
							: Error(Error)
					:o CypheredMessages(CypheredMessages)
					:o HistoryLog(HistoryLog)
					:o ErrorLog(ErrorLog)
						:o TraceFile(TraceFile)
				: ContextualHelp(ContextualHelp)
					:m ContextualHelpOperations(ContextualHelpOperations)
						:m ShowHelp(ShowHelp)
					:m ContextualHelpImplementations(ContextualHelpImplementations)
						:m JavaWizardAPI(JavaWizardAPI)
					:m HelpType(HelpType)
						:g [1,*]
							: Tutorial(Tutorial)
							: Wizard(Wizard)
					:m UserType(UserType)
						:g [1,*]
							: Beginner(Beginner)
							: Intermediate(Intermediate)
							: Advanced(Advanced)
							: Expert(Expert)
					:o AuthenticatedUser(AuthenticatedUser)
				: ExecutionControl(ExecutionControl)
					:m ExecutionControl_1(ExecutionControl_1)
						:g [1,*]
							: Undo(Undo)
							: Redo(Redo)
							: Cancel(Cancel)
							: GoBack(GoBack)
					:o Shortcuts(Shortcuts)
				: Internationalization(Internationalization)
					:m Locale(Locale)
				: Feedback(Feedback)
					:g [1,*]
						: InteractionFeedback(InteractionFeedback)
						: ProgressFeedback(ProgressFeedback)
						: SystemStatusDisplay(SystemStatusDisplay)
						: Alerts(Alerts)
		: Persistence(Persistence)
			:g [1,*]
				: FileStorage(FileStorage)
					:m FileStorageOperations(FileStorageOperations)
						:g [1,1]
							: CreateFile(CreateFile)
							: ModifyFile(ModifyFile)
							: DeleteFile(DeleteFile)
					:m FileType(FileType)
						:g [1,1]
							: Binary(Binary)
							: TXTFile(TXTFile)
							: XMLFile(XMLFile)
							: JSONFile(JSONFile)
					:m FileStorageImplementations(FileStorageImplementations)
						:m JavaIO(JavaIO)
					:o TemporalFile(TemporalFile)
				: DatabaseStorage(DatabaseStorage)
					:m DatabaseStorageOperations(DatabaseStorageOperations)
						:g [1,1]
							: Store(Store)
							: Query(Query)
					:m DatabaseStorageImplementations(DatabaseStorageImplementations)
						:g [1,1]
							: MySQL(MySQL)
							: MongoDB(MongoDB)
							: OracleDB(OracleDB)
					:m DatabaseType(DatabaseType)
						:g [1,1]
							: Relational(Relational)
							: NoSQL(NoSQL)
					:m DataType(DataType)
						:g [1,*]
							: Integers(Integers)
							: Strings(Strings)
							: Floats(Floats)
							: Objects(Objects)
					:o SecureDatabase(SecureDatabase)
		: ContextAwareness(ContextAwareness)
			:g [1,*]
				: LocationAware(LocationAware)
					:g [1,*]
						: GPS(GPS)
						: WiFiLocation(WiFiLocation)
				: TimeAware(TimeAware)
				: DeviceAware(DeviceAware)
					:g [1,*]
						: BatteryStatus(BatteryStatus)
						: IRSensor(IRSensor)
				: UserAware(UserAware)
				: EnvironmentAware(EnvironmentAware)
		: Performance(Performance)
			:m Caching(Caching)
				:m CachingOperations(CachingOperations)
					:g [1,1]
						: CacheStore(CacheStore)
						: CacheQuery(CacheQuery)
						: CacheUpdate(CacheUpdate)
				:m CachingImplementations(CachingImplementations)
					:g [1,1]
						: JavaCachingSystem(JavaCachingSystem)
						: Caffeine(Caffeine)
				:m MaxSizeCache(MaxSizeCache)
				:m CacheType(CacheType)
					:g [1,1]
						: LocalCache(LocalCache)
						: RemoteCache(RemoteCache)
				:o MaxLifeSeconds(MaxLifeSeconds)
				:o EternalObjects(EternalObjects)
</feature_tree>
    <constraints>
C1:TimeAware  or  ~BatteryStatus
C2:Alerts  or  ~BatteryStatus
C3:FileStorage  or  ~TraceFile
C4:~SimpleImplementationSLF4J  or  ~XML
C5:~AuthenticatedUser  or  Authentication
C6:~ErrorLog  or  Error
C7:~HistoryLog  or  Trace
</constraints>
</feature_model>
